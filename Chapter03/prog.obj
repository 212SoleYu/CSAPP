
prog:     file format elf32-i386


Disassembly of section .init:

08048314 <_init>:
 8048314:	53                   	push   %ebx
 8048315:	83 ec 08             	sub    $0x8,%esp
 8048318:	e8 a3 00 00 00       	call   80483c0 <__x86.get_pc_thunk.bx>
 804831d:	81 c3 e3 1c 00 00    	add    $0x1ce3,%ebx
 8048323:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048329:	85 c0                	test   %eax,%eax
 804832b:	74 05                	je     8048332 <_init+0x1e>
 804832d:	e8 4e 00 00 00       	call   8048380 <__printf_chk@plt+0x10>
 8048332:	83 c4 08             	add    $0x8,%esp
 8048335:	5b                   	pop    %ebx
 8048336:	c3                   	ret    

Disassembly of section .plt:

08048340 <__stack_chk_fail@plt-0x10>:
 8048340:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048346:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804834c:	00 00                	add    %al,(%eax)
	...

08048350 <__stack_chk_fail@plt>:
 8048350:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048356:	68 00 00 00 00       	push   $0x0
 804835b:	e9 e0 ff ff ff       	jmp    8048340 <_init+0x2c>

08048360 <__libc_start_main@plt>:
 8048360:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048366:	68 08 00 00 00       	push   $0x8
 804836b:	e9 d0 ff ff ff       	jmp    8048340 <_init+0x2c>

08048370 <__printf_chk@plt>:
 8048370:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048376:	68 10 00 00 00       	push   $0x10
 804837b:	e9 c0 ff ff ff       	jmp    8048340 <_init+0x2c>

Disassembly of section .plt.got:

08048380 <.plt.got>:
 8048380:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 8048386:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048390 <_start>:
 8048390:	31 ed                	xor    %ebp,%ebp
 8048392:	5e                   	pop    %esi
 8048393:	89 e1                	mov    %esp,%ecx
 8048395:	83 e4 f0             	and    $0xfffffff0,%esp
 8048398:	50                   	push   %eax
 8048399:	54                   	push   %esp
 804839a:	52                   	push   %edx
 804839b:	68 70 85 04 08       	push   $0x8048570
 80483a0:	68 10 85 04 08       	push   $0x8048510
 80483a5:	51                   	push   %ecx
 80483a6:	56                   	push   %esi
 80483a7:	68 8b 84 04 08       	push   $0x804848b
 80483ac:	e8 af ff ff ff       	call   8048360 <__libc_start_main@plt>
 80483b1:	f4                   	hlt    
 80483b2:	66 90                	xchg   %ax,%ax
 80483b4:	66 90                	xchg   %ax,%ax
 80483b6:	66 90                	xchg   %ax,%ax
 80483b8:	66 90                	xchg   %ax,%ax
 80483ba:	66 90                	xchg   %ax,%ax
 80483bc:	66 90                	xchg   %ax,%ax
 80483be:	66 90                	xchg   %ax,%ax

080483c0 <__x86.get_pc_thunk.bx>:
 80483c0:	8b 1c 24             	mov    (%esp),%ebx
 80483c3:	c3                   	ret    
 80483c4:	66 90                	xchg   %ax,%ax
 80483c6:	66 90                	xchg   %ax,%ax
 80483c8:	66 90                	xchg   %ax,%ax
 80483ca:	66 90                	xchg   %ax,%ax
 80483cc:	66 90                	xchg   %ax,%ax
 80483ce:	66 90                	xchg   %ax,%ax

080483d0 <deregister_tm_clones>:
 80483d0:	b8 23 a0 04 08       	mov    $0x804a023,%eax
 80483d5:	2d 20 a0 04 08       	sub    $0x804a020,%eax
 80483da:	83 f8 06             	cmp    $0x6,%eax
 80483dd:	76 1a                	jbe    80483f9 <deregister_tm_clones+0x29>
 80483df:	b8 00 00 00 00       	mov    $0x0,%eax
 80483e4:	85 c0                	test   %eax,%eax
 80483e6:	74 11                	je     80483f9 <deregister_tm_clones+0x29>
 80483e8:	55                   	push   %ebp
 80483e9:	89 e5                	mov    %esp,%ebp
 80483eb:	83 ec 14             	sub    $0x14,%esp
 80483ee:	68 20 a0 04 08       	push   $0x804a020
 80483f3:	ff d0                	call   *%eax
 80483f5:	83 c4 10             	add    $0x10,%esp
 80483f8:	c9                   	leave  
 80483f9:	f3 c3                	repz ret 
 80483fb:	90                   	nop
 80483fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048400 <register_tm_clones>:
 8048400:	b8 20 a0 04 08       	mov    $0x804a020,%eax
 8048405:	2d 20 a0 04 08       	sub    $0x804a020,%eax
 804840a:	c1 f8 02             	sar    $0x2,%eax
 804840d:	89 c2                	mov    %eax,%edx
 804840f:	c1 ea 1f             	shr    $0x1f,%edx
 8048412:	01 d0                	add    %edx,%eax
 8048414:	d1 f8                	sar    %eax
 8048416:	74 1b                	je     8048433 <register_tm_clones+0x33>
 8048418:	ba 00 00 00 00       	mov    $0x0,%edx
 804841d:	85 d2                	test   %edx,%edx
 804841f:	74 12                	je     8048433 <register_tm_clones+0x33>
 8048421:	55                   	push   %ebp
 8048422:	89 e5                	mov    %esp,%ebp
 8048424:	83 ec 10             	sub    $0x10,%esp
 8048427:	50                   	push   %eax
 8048428:	68 20 a0 04 08       	push   $0x804a020
 804842d:	ff d2                	call   *%edx
 804842f:	83 c4 10             	add    $0x10,%esp
 8048432:	c9                   	leave  
 8048433:	f3 c3                	repz ret 
 8048435:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048439:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048440 <__do_global_dtors_aux>:
 8048440:	80 3d 20 a0 04 08 00 	cmpb   $0x0,0x804a020
 8048447:	75 13                	jne    804845c <__do_global_dtors_aux+0x1c>
 8048449:	55                   	push   %ebp
 804844a:	89 e5                	mov    %esp,%ebp
 804844c:	83 ec 08             	sub    $0x8,%esp
 804844f:	e8 7c ff ff ff       	call   80483d0 <deregister_tm_clones>
 8048454:	c6 05 20 a0 04 08 01 	movb   $0x1,0x804a020
 804845b:	c9                   	leave  
 804845c:	f3 c3                	repz ret 
 804845e:	66 90                	xchg   %ax,%ax

08048460 <frame_dummy>:
 8048460:	b8 10 9f 04 08       	mov    $0x8049f10,%eax
 8048465:	8b 10                	mov    (%eax),%edx
 8048467:	85 d2                	test   %edx,%edx
 8048469:	75 05                	jne    8048470 <frame_dummy+0x10>
 804846b:	eb 93                	jmp    8048400 <register_tm_clones>
 804846d:	8d 76 00             	lea    0x0(%esi),%esi
 8048470:	ba 00 00 00 00       	mov    $0x0,%edx
 8048475:	85 d2                	test   %edx,%edx
 8048477:	74 f2                	je     804846b <frame_dummy+0xb>
 8048479:	55                   	push   %ebp
 804847a:	89 e5                	mov    %esp,%ebp
 804847c:	83 ec 14             	sub    $0x14,%esp
 804847f:	50                   	push   %eax
 8048480:	ff d2                	call   *%edx
 8048482:	83 c4 10             	add    $0x10,%esp
 8048485:	c9                   	leave  
 8048486:	e9 75 ff ff ff       	jmp    8048400 <register_tm_clones>

0804848b <main>:
 804848b:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 804848f:	83 e4 f0             	and    $0xfffffff0,%esp
 8048492:	ff 71 fc             	pushl  -0x4(%ecx)
 8048495:	55                   	push   %ebp
 8048496:	89 e5                	mov    %esp,%ebp
 8048498:	51                   	push   %ecx
 8048499:	83 ec 18             	sub    $0x18,%esp
 804849c:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80484a2:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80484a5:	31 c0                	xor    %eax,%eax
 80484a7:	8d 45 f0             	lea    -0x10(%ebp),%eax
 80484aa:	50                   	push   %eax
 80484ab:	6a 03                	push   $0x3
 80484ad:	6a 02                	push   $0x2
 80484af:	e8 3d 00 00 00       	call   80484f1 <multstore>
 80484b4:	83 c4 0c             	add    $0xc,%esp
 80484b7:	ff 75 f0             	pushl  -0x10(%ebp)
 80484ba:	68 90 85 04 08       	push   $0x8048590
 80484bf:	6a 01                	push   $0x1
 80484c1:	e8 aa fe ff ff       	call   8048370 <__printf_chk@plt>
 80484c6:	83 c4 10             	add    $0x10,%esp
 80484c9:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80484cc:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80484d3:	74 05                	je     80484da <main+0x4f>
 80484d5:	e8 76 fe ff ff       	call   8048350 <__stack_chk_fail@plt>
 80484da:	b8 00 00 00 00       	mov    $0x0,%eax
 80484df:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 80484e2:	c9                   	leave  
 80484e3:	8d 61 fc             	lea    -0x4(%ecx),%esp
 80484e6:	c3                   	ret    

080484e7 <mult2>:
 80484e7:	8b 44 24 08          	mov    0x8(%esp),%eax
 80484eb:	0f af 44 24 04       	imul   0x4(%esp),%eax
 80484f0:	c3                   	ret    

080484f1 <multstore>:
 80484f1:	83 ec 14             	sub    $0x14,%esp
 80484f4:	ff 74 24 1c          	pushl  0x1c(%esp)
 80484f8:	ff 74 24 1c          	pushl  0x1c(%esp)
 80484fc:	e8 e6 ff ff ff       	call   80484e7 <mult2>
 8048501:	8b 54 24 28          	mov    0x28(%esp),%edx
 8048505:	89 02                	mov    %eax,(%edx)
 8048507:	83 c4 1c             	add    $0x1c,%esp
 804850a:	c3                   	ret    
 804850b:	66 90                	xchg   %ax,%ax
 804850d:	66 90                	xchg   %ax,%ax
 804850f:	90                   	nop

08048510 <__libc_csu_init>:
 8048510:	55                   	push   %ebp
 8048511:	57                   	push   %edi
 8048512:	56                   	push   %esi
 8048513:	53                   	push   %ebx
 8048514:	e8 a7 fe ff ff       	call   80483c0 <__x86.get_pc_thunk.bx>
 8048519:	81 c3 e7 1a 00 00    	add    $0x1ae7,%ebx
 804851f:	83 ec 0c             	sub    $0xc,%esp
 8048522:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8048526:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804852c:	e8 e3 fd ff ff       	call   8048314 <_init>
 8048531:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048537:	29 c6                	sub    %eax,%esi
 8048539:	c1 fe 02             	sar    $0x2,%esi
 804853c:	85 f6                	test   %esi,%esi
 804853e:	74 25                	je     8048565 <__libc_csu_init+0x55>
 8048540:	31 ff                	xor    %edi,%edi
 8048542:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048548:	83 ec 04             	sub    $0x4,%esp
 804854b:	ff 74 24 2c          	pushl  0x2c(%esp)
 804854f:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048553:	55                   	push   %ebp
 8048554:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 804855b:	83 c7 01             	add    $0x1,%edi
 804855e:	83 c4 10             	add    $0x10,%esp
 8048561:	39 f7                	cmp    %esi,%edi
 8048563:	75 e3                	jne    8048548 <__libc_csu_init+0x38>
 8048565:	83 c4 0c             	add    $0xc,%esp
 8048568:	5b                   	pop    %ebx
 8048569:	5e                   	pop    %esi
 804856a:	5f                   	pop    %edi
 804856b:	5d                   	pop    %ebp
 804856c:	c3                   	ret    
 804856d:	8d 76 00             	lea    0x0(%esi),%esi

08048570 <__libc_csu_fini>:
 8048570:	f3 c3                	repz ret 

Disassembly of section .fini:

08048574 <_fini>:
 8048574:	53                   	push   %ebx
 8048575:	83 ec 08             	sub    $0x8,%esp
 8048578:	e8 43 fe ff ff       	call   80483c0 <__x86.get_pc_thunk.bx>
 804857d:	81 c3 83 1a 00 00    	add    $0x1a83,%ebx
 8048583:	83 c4 08             	add    $0x8,%esp
 8048586:	5b                   	pop    %ebx
 8048587:	c3                   	ret    
